name: Build and Release Theme

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch Tags
        run: |
          git fetch --tags
          git tag

      - name: Get and Increment Version
        id: get_version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.0")
          echo "Dernière version : $LAST_TAG"

          IFS='.' read -r MAJOR MINOR PATCH <<< "$LAST_TAG"
          PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"

          while git rev-parse "refs/tags/$NEW_VERSION" >/dev/null 2>&1; do
            PATCH=$((PATCH + 1))
            NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          done

          echo "Nouvelle version : $NEW_VERSION"
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create version.txt
        run: echo $VERSION > version.txt

      - name: Prepare Release Folder with Minified Files
        run: |
          mkdir release
          rsync -av --exclude='.git' --exclude='.github' --exclude='*.zip' --exclude='README.md' ./ release/

          echo "Minifying all .js and .css files..."

          find release -type f \( -name "*.js" -o -name "*.css" \) | while read -r file; do
            if [[ "$(basename "$file")" == "style.css" ]]; then
              # Extraire l'en-tête WordPress
              HEADER=$(awk '/\/\*/{flag=1} flag; /\*\//{flag=0}' "$file" | sed '/^\s*$/d')

              # Mettre à jour la version dans l'en-tête
              HEADER=$(echo "$HEADER" | sed "s/\(Version:\s*\)[0-9.]*/\1$VERSION/")

              # Extraire et minifier le corps CSS
              BODY=$(awk 'BEGIN{found=0} /\*\//{found=1; next} found' "$file" | tr -d '\n' | sed 's/  */ /g; s/ *{ */{/g; s/ *} */}/g; s/ *; */;/g; s/ *: */:/g')

              echo -e "$HEADER\n$BODY" > "$file"
            else
              # Minification simple pour tous les autres fichiers CSS/JS
              tr -d '\n' < "$file" | sed 's/  */ /g; s/ *{ */{/g; s/ *} */}/g; s/ *; */;/g; s/ *: */:/g' > "$file.tmp"
              mv "$file.tmp" "$file"
            fi
          done

      - name: Create Theme ZIP
        run: |
          cd release
          zip -r ../ocade-minimal.zip * .[^.]*

      - name: Commit Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "Update version to $VERSION" || echo "No changes to commit"
          git push origin master

      - name: Create Git Tag
        run: |
          git tag $VERSION
          git push origin $VERSION

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          body: "Nouvelle version : ${{ env.VERSION }}"
          draft: false
          prerelease: false
          files: |
            ocade-minimal.zip
            version.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
